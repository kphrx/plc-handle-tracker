x-shared_environment: &shared_environment
  LOG_LEVEL: info
  REDIS_URL: redis://redis:6379
  DATABASE_HOST: db
  DATABASE_NAME: vapor_database
  DATABASE_USERNAME: vapor_username
  DATABASE_PASSWORD: vapor_password

services:

  db:
    image: postgres:17-alpine
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "vapor_username", "-d", "vapor_database"]
      timeout: 60s
    volumes:
      - "db_data:/var/lib/postgresql/data/pgdata"
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: vapor_username
      POSTGRES_PASSWORD: vapor_password
      POSTGRES_DB: vapor_database
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"

  redis:
    image: redis:7-alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 60s
    volumes:
      - "redis_data:/data"

  app:
    image: ghcr.io/kphrx/plc-handle-tracker:latest
    build:
      context: .
    restart: always
    healthcheck:
      test: ["CMD", "bash", "-c", "':> /dev/tcp/127.0.0.1/8080'", "||", "exit", "1"]
      timeout: 15s
    environment:
      <<: *shared_environment
    depends_on:
      - db
      - redis
    # ports:
    #   - '8080:8080'
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]

  migrate:
    image: ghcr.io/kphrx/plc-handle-tracker:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
  revert:
    image: ghcr.io/kphrx/plc-handle-tracker:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0

  default_worker:
    image: ghcr.io/kphrx/plc-handle-tracker:latest
    build:
      context: .
    restart: always
    environment:
      <<: *shared_environment
    depends_on:
      - db
      - redis
    command: ["queues"]
    # deploy:
    #   replicas: 2 # scaling

  polling_worker:
    image: ghcr.io/kphrx/plc-handle-tracker:latest
    build:
      context: .
    restart: always
    environment:
      <<: *shared_environment
    depends_on:
      - db
      - redis
    command: ["queues", "--queue", "polling"]
    # deploy:
    #   replicas: 2 # scaling

  schedule_worker:
    image: ghcr.io/kphrx/plc-handle-tracker:latest
    build:
      context: .
    restart: always
    environment:
      <<: *shared_environment
    depends_on:
      - db
      - redis
    command: ["queues", "--scheduled"]

volumes:
  db_data:
  redis_data:
